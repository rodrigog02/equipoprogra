import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import butter, filtfilt, freqz
from scipy.fft import fft, fftfreq

# 1. Cargar los datos y graficar se√±ales originales
def cargar_datos():
    # Como solo tenemos un archivo en el ejemplo, lo cargamos directamente
    datos = pd.DataFrame({
        'Tiempo': [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],
        'Velocidad_Viento_mps': [6.119484349268802,6.13200242496944,5.829876621137293,5.6496773971150684,7.103663622765609,7.228205470162848,7.98610707471992,8.12063026492532,8.778568433717833,7.819052072402464,9.589449158440198,8.960109511754075,10.70529366997495,8.711850567298807,10.84380366347404,9.777726289326552,9.23414817858421,9.474740934744927,9.682163856420232,10.323919425787171,10.4182683904284,9.525626665514775,9.918958029166904,11.575665888877875,11.137317117556337,9.96845659829566,9.4854354034764,9.35922588314507,9.535899350059072,7.98379577584143,8.32963267599406,6.912372982548846,8.25830475954659,8.130249575341937,6.883403328858234,8.172606572457475,5.564472441472865,4.995726915111672,5.961733780049133,6.229974120728949,6.3471421531662955,4.240597111065626,5.080772341543883,3.8019664051199076,3.3168131881726097,3.79351078816389,3.2519058040330027,1.126393450832855,3.2423060183183523,2.856832841667045,0.9640159328596392,1.5146129987497738,1.350139177151454,0.9453381908886639,0.1047232559818263,-0.15669635690687522,0.22427416173107645,1.0763336134191088,0.4964384206998584,-0.2810781343345243,0.6173589685186758,-2.2634207651697,0.9805708573219944,-1.2536206250108628,-0.045235334598274834,-0.5151335782573491,-0.490777801518564,1.6654606081323529,0.5807540670757487,1.475173277384418,1.4269296309639141,2.13439242012758,2.122531251385838,1.3611133970693976,3.5270609568599776,2.6915775716454977,2.209649509197461,3.4902810519477434,5.418435507306293,5.28788191505157,4.721078292473711,5.1128893151844785,5.524864284227243,7.828625206128201,6.850633333659979,7.2574504795783055,8.094179261923207,7.803524150800952,7.7316925448057985,8.090160362382937,8.478252898401486,8.77225203879228,9.62718860678432,9.304757530416298,10.041144682714302,9.554824398469568,9.81819073372864,8.263289054362696,10.671503842737673,10.261777449384033,10.798408087887722,7.667582366110687,11.60914146680027,9.750177899464246,10.641828834865782,8.78747292085601,9.945251744991893,8.420468371231538,8.546069803318094,10.33325491109359,8.382987985322059,8.4211865401947,8.63498044601337,8.009038333957827,7.3902876228126,7.205385963798425,8.467817440065359,6.121131781652659,5.943051562573134,6.232818995445318,5.884420746366389,5.557328765809079,4.728811852422191,2.91836925053609,4.7616602539661415,2.1695065237596087,2.9721558734934908,1.7840864964047727,2.009763061263242,2.0157696865918657,1.7215518664274851,1.5355067753880696,2.2458840433721816,1.099626619440723,0.34964207082564525,1.1518720720742546,1.196293809663945,-0.8439358540979779,0.5394783529041971,0.5763515251830792,-0.23805080268799267,1.1159787819836553,-0.05848617260170891,0.23861156078884904,0.1062599590971352,0.393065575508741,-0.33205269045800356,-0.41524152784589474,2.230519078705239,0.5204010933451825,0.671352214502212,0.030047667466106542,1.5499043403860315,1.3290353416942573,4.043659629411364,3.8944365096486537,2.904394751983081,5.634721824995911,5.0032400643921235,4.347839414553873,3.0004754281011388,7.225049536711818,4.6705143517902705,4.850907821714009,7.363141317482439,8.86521908689686,8.37737075350615,8.063620119621635,8.414729734794593,8.929972688675164,9.142676777762151,9.026982967175654,9.128445855036237,9.21312631945084,8.851860949848495,9.394857601063011,8.400917130119456,9.783177900552584,9.147568817254955,9.101715214893023,10.143915320922783,11.098188497741319,10.67309498777754,8.605449119089844,8.963580072219498,10.37201461294701,8.669042706111195,9.08349430177284,9.485126651094376,8.027354264109247,8.619834310849505,7.180019845716357,7.457832146301397,7.868318370893775,5.995557511872406,7.265796952193773,6.5293747327334035,6.609218782813255,5.961303632452882,6.483607822618297,5.100179602118328,4.264180088460574,4.315665677224671,4.267411603949588,3.4940030843858376,3.1190561911376657,2.1684541510568685,1.8571864423795024,0.9389895210978827,3.1524211528986346,0.46937550575423326,0.6436460137631167,0.38018921566990127,1.4527386797850976,0.3090076364245428,1.3787959955825557,-0.2940750808708622,0.36134572779065854,-0.6067193455834916,1.7315326335530703,-0.9500787352236103,0.26326989951598345,0.5685798017699896,0.4691896759728138,0.09648729142206428,0.2767457776568252,0.58001655664145,0.6191975769267402,1.7260183215611824,2.966388573272919,1.018472666061002,0.6569173746858148,1.9904480998566276,4.451274646543709,2.0871078469264823,4.397876282529808,4.797075679386404,3.3899025873540674,4.6730141381470585,5.9104218198636005,4.696697807210007,5.229431190557333,5.31682759404224,5.355421434725236,6.025662935821936,5.934264948415634,7.297219273305108,6.996514238732825,8.125954990894959,7.002523724688015,8.80023809170429,9.468852997287296,7.450096457817575,9.562446077648522,10.43716781492047,8.651684847603466,11.09334049094593,10.197064809481219,9.37443221836896,9.939971406539474,10.446661530017378,10.04539098179557,10.369446496932783,9.125310727524893,9.890771240704632,8.48842606503245,9.36605177186288,8.54007470859863,8.456661017802933,9.790904368168512,9.40858200240816,8.734550738376665,7.065076049724305,7.359366063823905,8.240430658681081,7.02679069273737,8.400548603860088,6.481881090795035,5.935811618393188,5.14500230727723,5.10683272382583,4.485728652256342,4.784314616149735,4.598135034156138,2.8261234597188984,2.021596475328322,1.2610832028196364,2.7939002379502966,1.1783804535985392,0.03044728398709773,1.7753289776920336,3.1923697859460876,0.950058298893356,1.4075917977908579,0.6104308658962091,0.3014906148906546,0.9799786049144475,-0.09406923733930408,0.275472148281834,0.27277157629117144,-0.5344723629144381,0.8090472109635779,-0.07840950833201621,-0.4664457295826606,0.6739252933805528,-0.3381720479892638,0.567512304953464,0.7295039809141771,1.823631480790528,1.5777287583037995,1.4444445270711403,2.4069727977093063,3.1732397777514816,2.8337554215017438,2.7383295971769543,2.037113852294425,2.602824097664968,3.588593417236745,3.7302179130714097,4.458127478972411,5.045319939917681,5.816049682124607,5.725773302753881,6.5564281343404724,6.59666450372282,5.333043908742341,6.518484183642721,7.497222779002445,6.971170467189461,8.72718322564788,9.760134571807683,9.77703930935801,8.874330675130574,10.455781731250417,9.573966586703532,9.349728885662,9.264560450643016,9.619873852797875,9.627900248142705,10.120919646566028,10.128459184839892,9.987023484788374,10.287992238772771,10.814366621817456,10.51492588982883,8.431479287796511,7.411895713020282,10.01065675076188,7.95158201314241,8.622217506486004,7.599443485085257,6.805655891586909,8.372096444026216,8.219816951821864,6.808744178116359,4.8405833281095365,6.108089413272748,6.480670023601576,4.599043070181844,5.538983414462557,4.987752120661609,5.0711377210416675,4.313491969530169,3.0543180280152273,4.4121722294568695,2.95975917975297,2.7082038696943296,1.6408928091616906,1.7064479375844313,1.0449175871275638,1.326109246128537,2.567336956113719,-0.1426058862198143,-0.5540499400718468,1.7219036410530448,0.21314339572207675,-0.290540772403705,0.9700741479284782,-0.4229341347651788,1.4762211021719105,0.5423406970714162,-0.3749157951822025,1.7874048676367127,-0.3464215403910609,0.8383937161316756,0.620036401768765,1.5863604105771991,1.9860081356110213,0.9805183473778671,0.595235875722901,1.8324438084185484,1.210587462547391,3.671783536558914,2.4967354412864426,2.437790260252562,3.2343270828664785,2.377213996501508,3.055481949911939,5.178158801154393,4.08218909818365,4.162471213854442,5.821617680661031,6.7307356489315495,6.742389467811564,7.341923120519393,6.307981090969869,6.13250396530425,8.813559745144142,7.680782390388637,8.046573828486876,9.59808921941197,9.247013835520683,9.409795189540015,10.99520269769133,8.940218036637718,10.361669765021427,9.800893081393435,10.076723425078985,11.161216444105714,10.390855273697337,10.430636863239707,10.842592538513482,9.64647951934138,9.19048186811718,8.919435226258937,8.046312391055634,11.099998324894106,8.380634129193114,8.86808207300613,8.580579188089017,8.781459264180025,8.899830011682347,8.627305052150167,7.146030872724581,7.136255127668607,7.139481122216106,6.346132070927931,7.453103280095535,6.174952286511749,5.980197707479088,5.530305014933919,5.54648360734904,4.362644921761795,2.7953076223557956,3.7746653895273905,2.5654973231411162,2.3071541559024706,2.8565983914243533,3.051700195684549,1.769777019737921,1.711532504146435,2.5597421277080237,1.1475175717161157,2.818145669573862,0.9973750955634102,-1.0280078698810837,0.8473907154078658,0.4430771059178392,1.0933605002905107,0.5539584123503273,-0.11076478718701817,-0.9640252576971321,-0.10566030880451041,-0.5422659653558303,-0.21970134131954816,0.8514650609800458,1.8808909825392848,1.0525364020879142,-0.0017914215028839164,1.5536523065759484,2.4217712833837877,1.2649334348935695,1.953860005199281,2.3992577322036097,2.102128850836456,3.605207185249638,3.358156509239022,4.168399135846099,3.5078339325571544,4.257737881102056,5.57790508626221,5.094028956965788,7.1637434061878755,5.8475178707878275,6.724832752476248,7.659489827323908,6.135259912351314,6.2038457739951145,6.718401209806298,9.25730752439266,8.094047389218765,10.848589256534757,8.593686892948817,9.410841864328093,10.688720582996133,11.224271973083734,11.404485442784885,10.8285425864629,10.757691723624857,10.458608228026584],
        'Direccion_Viento_deg': [7.783610761666377,-4.791857163285335,-6.741988834223072,2.1262554258904798,1.1781537747507156,-0.932280493272752,11.283874474567153,14.593052085705107,6.644068862918473,21.25530081055262,-4.216891141335051,5.983405407202818,1.4717767939719515,-9.3053661707306,9.253193141573007,9.582524916167163,26.65449743242131,18.548116845547774,2.7181317567079493,32.22092566334189,26.61033695525353,20.940977034686156,13.57515901150168,6.965607632765201,13.557932239289471,28.88748619704186,37.565863059346086,34.87243528272189,15.27150578213726,9.683825667109886,23.00886246911204,4.635606344371485,26.271677141847814,22.28397413701331,19.819634981317577,9.252969327332044,31.056001065697163,21.312991603380887,15.660831642897119,-0.6426221328164949,28.524850949493633,47.24251596669744,46.852592145478695,26.38903743413728,25.657879396382192,37.087742560750236,23.136145608117083,36.857918998194656,42.220802783846906,47.54933223884308,34.99845923520047,34.68326249823034,28.660174132434385,29.891196459601396,36.61521108098473,43.27365506816178,49.45584626233249,33.00821049319655,56.686885689595215,39.76876398957431,42.986327056515634,36.447883208521766,20.397597397270584,54.2004539636105,53.44843897092433,43.986724428817865,48.18990717224872,53.39939217704099,33.334541431134575,44.38947322653705,58.34264679621827,38.577105768307504,54.77557932166629,38.994181953765946,57.94429982433527,53.643585177025166,38.568681840944905,67.08739354457171,48.8140842320195,48.777475629856184,59.60569197230942,69.80637349428716,48.881781810216026,60.376798498479715,64.76816500330573,68.13105607263144,63.68441555277224,58.969721609166776,55.084097793512804,64.94143883046375,54.07860988014393,36.306495165053924,70.60559804157667,75.99934841086194,44.05067564458161,58.302692952900614,75.31154261005199,90.414954697117,70.76793707675408,63.99997058770866,70.1710355889516,86.46876419148185,66.98035820875464,66.16807993349747,70.05256477817967,66.06671391741287,77.54670315994795,93.2867845846956,80.99079273116028,75.95646497873713,76.28188731084457,64.28809191303343,89.47109777147159,80.58162802987198,80.27520086409375,114.7310756784486,86.50752908365686,76.72208949904815,80.69642403794457,97.16445709196753,87.53270410537763,72.73722021682633,97.03228934575203,81.87855914461007,108.01297776217545,100.80048065714648,86.24678104341248,104.25016361735112,92.83855510527403,101.40773675122219,98.44732817294474,85.85643345009126,88.60450167682538,106.0596081758116,93.13224667893458,93.16351536758003,88.36877420650647,102.87599065593461,119.98524919243145,89.40467085745726,101.04219456672757,115.64220555415429,101.44358608754284,107.48371796249734,93.05606471853119,108.68307097207648,103.2485573499545,115.69729995679862,118.43386051564751,133.17563642018615,113.79633173213576,111.97796316582166,111.38384301577335,106.62833707189311,114.2648384346169,108.6459858986097,114.00460976269613,126.21597535607958,103.69457434720358,125.87878561129044,128.37115067339863,114.73931473008922,95.42145100991405,111.28178012905568,131.0499454656111,118.57131937701118,109.5269776770509,115.19225078771782,129.36620026504553,127.14733568201379,120.01067900830304,119.45175588185312,119.92241850956177,115.33589815501497,141.43375689469443,122.7767953078866,138.89158520825495,142.6531605192245,138.1431089814796,124.56379687281951,133.63730090336608,130.07804393609084,122.00298139269871,135.00359281721603,120.68960208840197,145.07679388461563,129.27382702701607,136.6515965587284,138.1928787154614,133.49095026295922,142.66693801475273,132.77096343377474,146.95297297457245,125.50020319753253,140.94379579546413,159.78928999058286,131.11668675394426,135.06255029475147,147.69907849658915,145.07581781939598,147.5063009927356,149.61187130147664,151.7872146856177,157.25699841956222,150.97818656928513,145.18742345381457,155.0457370120273,168.03881934895216,148.43366253617427,140.73470695329357,162.2708066928697,150.716188360464,130.9133045398596,161.8342167715042,148.72671814046075,153.89466717695836,158.83980330569014,158.14499679779064,164.0545181713904,153.3251362943016,163.53105798176082,156.52453322416082,167.22810480887503,166.71367484013052,151.92561297955405,172.85982116175032,157.3603655488595,171.52057798281146,167.8328731340134,183.26183676795122,163.36534017628148,162.82683203881803,166.84580394112265,164.72820217165724,176.4794190194205,153.0368939156341,159.38317580853644,159.96197078420806,180.86307591973573,189.18613372581925,171.75550781462528,171.83178276809988,174.9405216311318,186.57878302608188,166.40646865809427,178.78368982734787,186.8719762978243,182.85094169939845,180.45581616598744,189.29046092567143,152.96767707000762,187.49875319530906,174.89924316872575,163.85367103143543,187.9920259952498,197.33658545162956,182.94551485372307,194.56874547202938,201.88278257988645,199.62914453584045,203.59964529371393,195.3412749107189,189.3943363890159,173.3403418810283,187.6193751187005,182.36753404683807,213.22942717497813,190.48114187567663,194.19204806784484,199.19485376040467,194.83602446372456,212.07051040430753,189.6135063826555,198.50607455237244,189.8552941430195,184.79977488779295,192.60230909094713,199.06963202951587,195.8669777548274,193.95579020126144,187.53682536328165,201.48894427371306,187.99279625968998,211.36055963689603,205.304397529345,190.6244850053507,202.82790922950136,199.11843594409416,210.55174510419178,221.48450446023142,190.04827530354254,210.67026079147416,208.6386720443336,217.67340076450463,213.81196628237686,204.8803066826118,209.9294606433338,205.8797414319651,225.32007138598598,215.49311648671943,235.01190685753008,216.11339186185378,210.35593233089537,203.02285607387174,200.84860323744056,203.7586405699451,222.99126651011483,226.12725023229933,205.94809297967865,231.43038314076114,218.3693894831656,225.38793011985547,240.76220628255425,234.3283931586553,223.39469352094167,217.8880777458471,206.00184598670694,221.04846680757578,226.84869761172303,219.80820472848814,229.08743032907694,231.8885188295877,229.5914401819192,226.0599741917654,234.9665467196673,238.4194064956941,223.81600922557155,249.5493237974627,235.17411867715737,237.06849622944847,244.68214423256558,240.652161312635,248.57136633913245,242.63124165201825,234.3556262535956,244.815035252061,230.48273792679336,243.7255970577652,243.02770009355538,241.99883142727458,243.5146248856107,226.70150954502358,240.75275092259037,247.88844901141113,249.27856391997398,238.1232485907404,261.777078408647,241.178251517855,260.2545720052674,255.55194361871685,245.53772690156197,270.4731089260951,241.50363168243518,263.3515417361,264.8858231804298,248.89379790923354,270.24465300064327,254.53953485401044,260.64693629279856,261.08321838771224,257.85691258529454,268.02808273159786,268.5748872055221,243.8746802676182,275.1234024287815,246.17508011964327,273.84546204341655,275.5070513682758,254.050335697848,261.5718571204542,255.34295331514062,264.97078969711265,264.75965715814255,276.3566053226934,282.38308746119606,283.95683810789956,265.09831973421694,269.34778126255475,255.32561807779047,264.82129933503813,283.24851633097455,290.4758282354823,262.69651128120074,269.83535740847105,276.21594243041073,280.00161158819606,269.82396480078353,282.88061044464087,274.62160652929083,279.9354772912172,286.262842480037,281.5842226981094,277.87614109473435,281.86390196074166,282.79637040794665,280.6998897011787,282.532039373329,301.82647170504714,292.1691944794124,284.32519681970837,294.96954404510734,285.3818051024399,301.1712463758664,293.8564219219809,289.8069785599577,296.07716925810274,276.611238479315,281.7723253109019,281.82074993600946,295.909430947637,312.5251499948509,318.23300146192634,303.02051101440753,302.36844474944456,280.0694226584726,293.37326200265977,291.6421624809176,294.03152401748883,299.27856181415206,296.9590942230287,282.6070018962421,310.59910256117536,293.1125697426019,306.9524686411115,326.02082669749973,296.80615408413576,281.4171247725367,304.5799577811989,319.1695963499857,328.4634745422059,297.3045040554758,315.2869922323652,306.3868954321994,310.7005164569586,338.9234334701703,298.1702967160485,316.45739661494576,319.3169317176543,326.2178632493935,317.05983153470896,319.88050539504104,313.60351432578204,320.93126941245106,315.5280772450259,325.8957188985605,316.70389663956365,324.89100393902186,321.5473718631502,333.8205025077217,322.76606276411513,306.26967531793116,337.3392150071399,316.3826769913738,319.6223366135118,320.9233870595651,341.34438093170814,306.96325786021305,360.4174853365999,340.3205680906605,332.71238914129157,330.6510599938371,334.7755407485766,337.8512242837934,339.8121558595006,339.6360446600345,335.6958068125525,333.54661579692674,334.7272671634649,335.01091719647314,349.0177009686706,344.3355672228086,309.7161136533572,346.3990077652976,342.50736194718775,341.092912435541,338.11481546911114,353.96112719986013,352.9152646212286,336.43122332176387,348.95052287124537,335.8834326545871,332.5238183521107,340.7728277541003,356.38393472382756,358.01125045376085,354.3308542009729,357.17095786847995,355.80178287114956,344.9451840477705,356.39922544673936,360.80409525227685,361.0629132981357,366.12913371474644,362.0430384720106,359.19448207541586,367.10150238316425,356.8547874075094,349.0212534877228,356.92933036056235,351.8309735519355]
    })
    
    # Ajustar escala de tiempo (cada dato cada 5 segundos)
    datos['Tiempo'] = datos['Tiempo'] * 5  # Convertir a segundos
    
    # Graficar se√±ales originales
    plt.figure(figsize=(12, 8))
    
    plt.subplot(2, 1, 1)
    plt.plot(datos['Tiempo'], datos['Velocidad_Viento_mps'], label='Velocidad del Viento (m/s)')
    plt.title('Se√±ales Originales de los Sensores')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Velocidad (m/s)')
    plt.legend()
    plt.grid(True)
    
    plt.subplot(2, 1, 2)
    plt.plot(datos['Tiempo'], datos['Direccion_Viento_deg'], label='Direcci√≥n del Viento (grados)', color='orange')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Direcci√≥n (grados)')
    plt.legend()
    plt.grid(True)
    
    plt.tight_layout()
    plt.show()
    
    return datos

# 2. Aplicar promediado m√≥vil
def promediado_movil(datos):
    # Ventana de 3 muestras
    ventana = 3
    
    # Aplicar promediado m√≥vil
    datos['Velocidad_promediada'] = datos['Velocidad_Viento_mps'].rolling(window=ventana, center=True).mean()
    datos['Direccion_promediada'] = datos['Direccion_Viento_deg'].rolling(window=ventana, center=True).mean()
    
    # Graficar se√±ales originales y promediadas
    plt.figure(figsize=(12, 8))
    
    plt.subplot(2, 1, 1)
    plt.plot(datos['Tiempo'], datos['Velocidad_Viento_mps'], label='Original')
    plt.plot(datos['Tiempo'], datos['Velocidad_promediada'], label='Promediada (3 muestras)')
    plt.title('Velocidad del Viento - Original vs Promediada')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Velocidad (m/s)')
    plt.legend()
    plt.grid(True)
    
    plt.subplot(2, 1, 2)
    plt.plot(datos['Tiempo'], datos['Direccion_Viento_deg'], label='Original', color='orange')
    plt.plot(datos['Tiempo'], datos['Direccion_promediada'], label='Promediada (3 muestras)', color='green')
    plt.title('Direcci√≥n del Viento - Original vs Promediada')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Direcci√≥n (grados)')
    plt.legend()
    plt.grid(True)
    
    plt.tight_layout()
    plt.show()
    
    return datos

# 3. Aplicar filtro pasa bajas
def filtro_pasa_bajas(datos):
    # Frecuencia de muestreo (0.2 muestras por segundo = 1 muestra cada 5 segundos)
    fs = 0.2  # Hz
    nyquist = 0.5 * fs
    
    # Frecuencia de corte (0.1 en frecuencia normalizada)
    cutoff = 0.1  # Hz
    normal_cutoff = cutoff / nyquist
    
    # Dise√±ar filtro Butterworth
    b, a = butter(4, normal_cutoff, btype='low', analog=False)
    
    # Aplicar filtro
    datos['Velocidad_filtrada_pb'] = filtfilt(b, a, datos['Velocidad_Viento_mps'])
    datos['Direccion_filtrada_pb'] = filtfilt(b, a, datos['Direccion_Viento_deg'])
    
    # Graficar se√±ales originales y filtradas
    plt.figure(figsize=(12, 8))
    
    plt.subplot(2, 1, 1)
    plt.plot(datos['Tiempo'], datos['Velocidad_Viento_mps'], label='Original')
    plt.plot(datos['Tiempo'], datos['Velocidad_filtrada_pb'], label='Filtrada pasa bajas')
    plt.title('Velocidad del Viento - Original vs Filtrada Pasa Bajas')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Velocidad (m/s)')
    plt.legend()
    plt.grid(True)
    
    plt.subplot(2, 1, 2)
    plt.plot(datos['Tiempo'], datos['Direccion_Viento_deg'], label='Original', color='orange')
    plt.plot(datos['Tiempo'], datos['Direccion_filtrada_pb'], label='Filtrada pasa bajas', color='green')
    plt.title('Direcci√≥n del Viento - Original vs Filtrada Pasa Bajas')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Direcci√≥n (grados)')
    plt.legend()
    plt.grid(True)
    
    plt.tight_layout()
    plt.show()
    
    return datos, b, a

# 4. Aplicar filtro pasa bandas
def filtro_pasa_bandas(datos):
    # Frecuencia de muestreo (0.2 muestras por segundo = 1 muestra cada 5 segundos)
    fs = 0.2  # Hz
    nyquist = 0.5 * fs
    
    # Frecuencias de corte (banda de inter√©s)
    lowcut = 0.02  # Hz
    highcut = 0.08  # Hz
    
    # Normalizar frecuencias
    low = lowcut / nyquist
    high = highcut / nyquist
    
    # Dise√±ar filtro Butterworth pasa bandas
    b, a = butter(4, [low, high], btype='band', analog=False)
    
    # Aplicar filtro
    datos['Velocidad_filtrada_pbanda'] = filtfilt(b, a, datos['Velocidad_Viento_mps'])
    datos['Direccion_filtrada_pbanda'] = filtfilt(b, a, datos['Direccion_Viento_deg'])
    
    # Graficar se√±ales filtradas con pasa bandas
    plt.figure(figsize=(12, 8))
    
    plt.subplot(2, 1, 1)
    plt.plot(datos['Tiempo'], datos['Velocidad_filtrada_pbanda'], label='Filtrada pasa bandas')
    plt.title('Velocidad del Viento - Filtrada Pasa Bandas')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Velocidad (m/s)')
    plt.legend()
    plt.grid(True)
    
    plt.subplot(2, 1, 2)
    plt.plot(datos['Tiempo'], datos['Direccion_filtrada_pbanda'], label='Filtrada pasa bandas', color='orange')
    plt.title('Direcci√≥n del Viento - Filtrada Pasa Bandas')
    plt.xlabel('Tiempo (s)')
    plt.ylabel('Direcci√≥n (grados)')
    plt.legend()
    plt.grid(True)
    
    plt.tight_layout()
    plt.show()
    
    return datos, b, a

# 5. An√°lisis de Fourier (FFT)
def analisis_fourier(datos, b_pb, a_pb, b_pbanda, a_pbanda):
    # Frecuencia de muestreo (0.2 muestras por segundo = 1 muestra cada 5 segundos)
    fs = 0.2  # Hz
    N = len(datos)
    
    # Calcular FFT para velocidad del viento
    yf_vel_orig = fft(datos['Velocidad_Viento_mps'].values)
    yf_vel_pb = fft(datos['Velocidad_filtrada_pb'].values)
    yf_vel_pbanda = fft(datos['Velocidad_filtrada_pbanda'].values)
    xf = fftfreq(N, 1/fs)[:N//2]
    
    # Graficar espectro de frecuencia para velocidad
    plt.figure(figsize=(12, 6))
    plt.plot(xf[:N//2], 2/N * np.abs(yf_vel_orig[0:N//2]), label='Original')
    plt.plot(xf[:N//2], 2/N * np.abs(yf_vel_pb[0:N//2]), label='Pasa bajas')
    plt.plot(xf[:N//2], 2/N * np.abs(yf_vel_pbanda[0:N//2]), label='Pasa bandas')
    plt.title('Espectro de Frecuencia - Velocidad del Viento')
    plt.xlabel('Frecuencia (Hz)')
    plt.ylabel('Amplitud')
    plt.legend()
    plt.grid(True)
    plt.show()
    
    # Calcular FFT para direcci√≥n del viento
    yf_dir_orig = fft(datos['Direccion_Viento_deg'].values)
    yf_dir_pb = fft(datos['Direccion_filtrada_pb'].values)
    yf_dir_pbanda = fft(datos['Direccion_filtrada_pbanda'].values)
    
    # Graficar espectro de frecuencia para direcci√≥n
    plt.figure(figsize=(12, 6))
    plt.plot(xf[:N//2], 2/N * np.abs(yf_dir_orig[0:N//2]), label='Original')
    plt.plot(xf[:N//2], 2/N * np.abs(yf_dir_pb[0:N//2]), label='Pasa bajas')
    plt.plot(xf[:N//2], 2/N * np.abs(yf_dir_pbanda[0:N//2]), label='Pasa bandas')
    plt.title('Espectro de Frecuencia - Direcci√≥n del Viento')
    plt.xlabel('Frecuencia (Hz)')
    plt.ylabel('Amplitud')
    plt.legend()
    plt.grid(True)
    plt.show()
    
    # Comparaci√≥n de filtros
    print("Comparaci√≥n de filtros:")
    print("- El filtro pasa bajas aten√∫a las altas frecuencias (ruido de alta frecuencia)")
    print("- El filtro pasa bandas a√≠sla componentes en una banda espec√≠fica de frecuencias")
    print("- El espectro muestra que el filtro pasa bajas es m√°s efectivo para reducir ruido de alta frecuencia")
    print("- El filtro pasa bandas es √∫til para analizar componentes peri√≥dicas espec√≠ficas en los datos")

# Funci√≥n principal
def main():
    # 1. Cargar datos
    datos = cargar_datos()
    
    # 2. Aplicar promediado m√≥vil
    datos = promediado_movil(datos)
    
    # 3. Aplicar filtro pasa bajas
    datos, b_pb, a_pb = filtro_pasa_bajas(datos)
    
    # 4. Aplicar filtro pasa bandas
    datos, b_pbanda, a_pbanda = filtro_pasa_bandas(datos)
    
    # 5. An√°lisis de Fourier
    analisis_fourier(datos, b_pb, a_pb, b_pbanda, a_pbanda)

if __name__ == "__main__":
    main()